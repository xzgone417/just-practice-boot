<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.egrid</groupId>
        <artifactId>cmf-microservice-build</artifactId>
        <version>2.0.0</version>
    </parent>
    <groupId>{{project_group_id}}</groupId>
    <artifactId>{{project_artifact_id}}</artifactId>
    <packaging>pom</packaging>
    <version>{{project_version}}</version>
    
    <!-- 公共参数 -->
    <properties>
        <docker.image.prefix>192.168.1.64:8080/italk</docker.image.prefix>
        <dockerfile-maven-plugin.version>1.4.10</dockerfile-maven-plugin.version>
        <swagger.version>2.9.2</swagger.version>
        <logstash.version>4.11</logstash.version>
        <mybatis.version>1.3.1</mybatis.version>
        <pagehelper.version>1.2.3</pagehelper.version>
        <tkmybatis.version>1.1.4</tkmybatis.version>
        <fluent.version>1.0.9</fluent.version>
        <cmf.startercore.version>2.0.0</cmf.startercore.version>
{% if project_dependencies %}
{%- for item in project_dependencies %}
        <{{item.version[0]}}>{{item.version[1]}}</{{item.version[0]}}>
{%- endfor %}
{% endif%}
    </properties>

    <!-- 依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- Logstash encoder -->
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>
            <!-- ORM(Mybatis) -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!-- 分页组件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${tkmybatis.version}</version>
            </dependency>
            <!-- 基于DB字段定义做属性校验 -->
            <dependency>
                <groupId>com.baidu.unbiz</groupId>
                <artifactId>fluent-validator-jsr303</artifactId>
                <version>${fluent.version}</version>
            </dependency>
{%- if project_dependencies %}
{% for item in project_dependencies %}
            <dependency>
                <groupId>{{item.groupId}}</groupId>
                <artifactId>{{item.artifactId}}</artifactId>
                <version>{{ '${' }}{{item.version[0]}}{{ '}' }}</version>
            </dependency>
{% endfor %}
{%- endif%}
            <dependency>
                <groupId>com.egrid</groupId>
                <artifactId>cmf-service-core</artifactId>
                <version>${cmf.core.version}</version>
            </dependency>
    
            <dependency>
                <groupId>com.egrid</groupId>
                <artifactId>cmf-service-starter-core</artifactId>
                <version>${cmf.startercore.version}</version>
            </dependency>
            
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- 服务注册与发现 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        
        <!-- 单测 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId> 
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>
        
        <!-- Logstash encoder -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>
{%- if project_dependencies %}
{% for item in project_dependencies %}
{%- if not item.onlyDependencyManagement %}
        <dependency>
            <groupId>{{item.groupId}}</groupId>
            <artifactId>{{item.artifactId}}</artifactId>
        </dependency>
{%- endif%}
{% endfor %}
{%- endif%}
    </dependencies>
    
    <profiles>
        <profile>
            <!-- 单机环境打包 -->
            <id>local</id>
            <properties>
                <profiles.active>local</profiles.active>
            </properties>
        </profile>
        <profile>
            <!-- remote环境打包 -->
            <id>remote</id>
            <properties>
                <profiles.active>remote</profiles.active>
            </properties>
            <dependencies>
                <!-- 分布式配置 -->
                <dependency>
                    <groupId>com.alibaba.cloud</groupId>
                    <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
                </dependency>
            </dependencies>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>
    
    <!-- 构建 -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 资源根目录排除各环境的配置，使用单独的资源目录来指定 -->
                <excludes>
                    <exclude>env/**</exclude>
                    <exclude>*.yml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>application.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/env/${profiles.active}</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- 基于Maven来构建Docker镜像，mvn clean package dockerfile:build dockerfile:push -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <useConfigFile>false</useConfigFile>
             </configuration>
            </plugin>
        </plugins>
        <extensions>
            <extension>
              <groupId>com.spotify</groupId>
              <artifactId>dockerfile-maven-extension</artifactId>
              <version>${dockerfile-maven-plugin.version}</version>
            </extension>
        </extensions>
    </build>
</project>